#include <SparkFun_TB6612.h>
#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_MLX90614.h>
#include <WiFi.h>

// Motor and sensor pins (same as in your initial code)
#define AIN1 13
#define BIN1 12
#define AIN2 14
#define BIN2 27
#define PWMA 26
#define PWMB 25
#define STBY 33
#define SDA_PIN 21
#define SCL_PIN 22
#define LED 34

const int offsetA = 1;
const int offsetB = 1;

Motor motor1 = Motor(AIN1, AIN2, PWMA, offsetA, STBY);
Motor motor2 = Motor(BIN1, BIN2, PWMB, offsetB, STBY);
Adafruit_MLX90614 mlx = Adafruit_MLX90614();

const char* ssid     = "your-SSID";
const char* password = "your-PASSWORD";
const char* esp32CamIP = "ESP32-CAM-IP"; // Replace with the IP of your ESP32-CAM

WiFiServer server(80);
bool showTemperature = false;

void setup() {
  Serial.begin(115200);

  // Initialize motors and MLX90614
  pinMode(AIN1, OUTPUT);
  pinMode(AIN2, OUTPUT);
  pinMode(BIN1, OUTPUT);
  pinMode(BIN2, OUTPUT);
  pinMode(PWMA, OUTPUT);
  pinMode(PWMB, OUTPUT);
  pinMode(STBY, OUTPUT);
  digitalWrite(STBY, HIGH);
  Wire.begin(SDA_PIN, SCL_PIN);
  mlx.begin();

  // Initialize Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  // Start the server
  server.begin();
}

void loop() {
  WiFiClient client = server.available();
  if (client) {
    String currentLine = "";
    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
        currentLine += c;
        if (c == '\n') {
          if (currentLine.indexOf("GET /forward") != -1) {
            forward();
          } else if (currentLine.indexOf("GET /backward") != -1) {
            backward();
          } else if (currentLine.indexOf("GET /left") != -1) {
            left();
          } else if (currentLine.indexOf("GET /right") != -1) {
            right();
          } else if (currentLine.indexOf("GET /stop") != -1) {
            stop();
          } else if (currentLine.indexOf("GET /temperature") != -1) {
            showTemperature = !showTemperature;
          }
          sendHttpResponse(client);
          break;
        }
      }
    }
    delay(1);
    client.stop();
    Serial.println("Client disconnected.");
  }
}

void forward() {
  motor1.drive(255);
  motor2.drive(255);
}

void backward() {
  motor1.drive(-255);
  motor2.drive(-255);
}

void left() {
  motor1.drive(150);
  motor2.drive(-150);
}

void right() {
  motor1.drive(-150);
  motor2.drive(150);
}

void stop() {
  motor1.brake();
  motor2.brake();
}

void sendHttpResponse(WiFiClient client) {
  client.println("HTTP/1.1 200 OK");
  client.println("Content-type:text/html");
  client.println("Connection: close");
  client.println();

  client.println("<!DOCTYPE html><html><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
  client.println("<style>body { font-family: Arial, sans-serif; }</style>");
  client.println("<script>");
  client.println("function sendCommand(command) {");
  client.println("  var xhttp = new XMLHttpRequest();");
  client.println("  xhttp.open('GET', command, true);");
  client.println("  xhttp.send();");
  client.println("}");
  client.println("</script>");
  client.println("</head><body>");
  client.println("<h1 style=\"text-align: center;\">WiFi Car Control</h1>");
  client.println("<div style=\"text-align: center;\">");
  client.println("<p><a href=\"/forward\"><button style=\"font-size: 20px;\">Forward</button></a></p>");
  client.println("<p><a href=\"/backward\"><button style=\"font-size: 20px;\">Backward</button></a></p>");
  client.println("<p><a href=\"/left\" onmousedown=\"sendCommand('/left')\" onmouseup=\"sendCommand('/stop')\"><button style=\"font-size: 20px;\">Left</button></a>");
  client.println("<a href=\"/right\" onmousedown=\"sendCommand('/right')\" onmouseup=\"sendCommand('/stop')\"><button style=\"font-size: 20px;\">Right</button></a></p>");
  client.println("<p><a href=\"/stop\"><button style=\"font-size: 20px;\">Stop</button></a></p>");

  client.println("<p><a href=\"/temperature\"><button style=\"font-size: 20px;\">Show/Hide Temperature</button></a></p>");

  if (showTemperature) {
    client.print("<p>ObjectTemperature(C): ");
    client.print(mlx.readObjectTempC());
    client.println(" C</p>");
    client.print("<p>AmbientTemperature(C): ");
    client.print(mlx.readAmbientTempC());
    client.println(" C</p>");
  }

  // Embed the video stream from ESP32-CAM
  client.println("<h2>Live Stream</h2>");
  client.printf("<img src='http://%s/stream' style='width:100%%; height:auto;'>", esp32CamIP);

  client.println("</div></body></html>");
}
